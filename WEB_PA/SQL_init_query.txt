DROP TABLE IF EXISTS "events" CASCADE;
DROP TABLE IF EXISTS "users" CASCADE;
DROP TABLE IF EXISTS "forum" CASCADE;
DROP TABLE IF EXISTS "posts" CASCADE;
DROP TABLE IF EXISTS "maps" CASCADE;
DROP TABLE IF EXISTS "tasks" CASCADE;
DROP TABLE IF EXISTS "points" CASCADE;
DROP TABLE IF EXISTS "events_assists" CASCADE;
DROP TABLE IF EXISTS "events_participants" CASCADE;


CREATE TABLE users(
	user_id VARCHAR(50) Primary Key,
	nickname VARCHAR(20),
	first_name VARCHAR(20),
	family_name VARCHAR(20),
	pw TEXT,
	salt TEXT
);

CREATE TABLE events(
	event_id SERIAL PRIMARY KEY,
	owner_id VARCHAR(50) REFERENCES users(user_id),
	event_name VARCHAR(50),
	description TEXT,
	address VARCHAR(60),
	gps_coord VARCHAR(30),
	event_time TIMESTAMP
);

CREATE TABLE maps (
	map_id SERIAL PRIMARY KEY,
	map_name VARCHAR(50),
	map_link TEXT,
	event_id INT REFERENCES events(event_id)
);

CREATE TABLE forum (
	topic_id SERIAL PRIMARY KEY,
	event_id INT REFERENCES events(event_id),
	topic_name VARCHAR(30),
	topic_type VARCHAR(5),
	topic_message TEXT
);

CREATE TABLE posts (
	post_id SERIAL PRIMARY KEY,
	topic_id INT REFERENCES forum(topic_id),
	user_id VARCHAR(50) REFERENCES users(user_id),
	submission_time TIMESTAMP,
	post VARCHAR(2000),
	edited BOOLEAN
);

CREATE TABLE tasks (
	task_id SERIAL PRIMARY KEY,
	serial_number INT,
	task_name VARCHAR (20),
	event_id INT REFERENCES events(event_id),
	task_description VARCHAR(1000),
	map_id INT REFERENCES maps(map_id)
);

CREATE TABLE points (
	point_id SERIAL PRIMARY KEY,
	task_id INT REFERENCES tasks(task_id),
	coord_x REAL,
	coord_y REAL,
	point_name VARCHAR(30),
	point_desc VARCHAR(300),
	point_mark TEXT,
	right_point BOOLEAN
);

CREATE TABLE events_assists(
	event_id INT REFERENCES events(event_id),
	user_id VARCHAR(50) REFERENCES users(user_id)
);

CREATE TABLE events_participants(
	event_id INT REFERENCES events(event_id),
	user_id VARCHAR(50) REFERENCES users(user_id)
);