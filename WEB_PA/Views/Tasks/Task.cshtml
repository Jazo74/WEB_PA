@model WEB_PA.Models.TaskModel

<div class="Task-grid">
    <div class="Task-left1">
        <h3 class="center-title">Task information</h3>
        <div class="event-info">
            <p><strong>Task Nr.:</strong> @Model.TaskData.Name - <strong>Task Name:</strong> @Model.TaskData.Name</p>
            <p><strong>Description:</strong> @Model.TaskData.Description</p>
        </div>
    </div>
    <div class="Task-left2">
        <h3 class="center-title">Added points</h3>
        <div class="task-list">
            @{ if (Model.PointsData.Count != 0)
                {
                    <table class="Backlog-table">
                        <thead>
                            <tr>
                                <th>Point Name</th>
                                @*<th>Right Point</th>*@
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @{foreach (WEB_PA.Domain.Point point in Model.PointsData)
                                {
                                    <tr>
                                        <td>@point.Name</td>
                                        @*<td>@point.RightPoint</td>*@
                                        <td><a asp-controller="Points" asp-action="DeletePoint" asp-route-pid=@(point.PointID) asp-route-tid=@(Model.TaskData.TaskID)>Delete</a></td>
                                    </tr>
                                }
                            }
                        </tbody>

                    </table>
                }
                else
                {
                    <p>There are no points!</p>
                }
            }
        </div>
    </div>
    <div class="Task-right1">
        <h3 class="center-title">Add a new point</h3>
        <form method="post" asp-controller="Points" asp-action="MarkPoint" autocomplete="off">
            <input class="input-text" type="text" maxlength="30" name="pointName" placeholder="point name" required autocomplete="off" />
            <input class="input-text" type="text" maxlength="300"name="pointDescription" placeholder="description" required autocomplete="off" />
            <input class="button" type="submit" value="Next" />
            <input type="hidden" name="taskId" value="@Model.TaskData.TaskID" />
            <input type="hidden" name="mapLink" value="@Model.MapData.MapLink" />

        </form>
    </div>
    <div class="Task-right2">
        <img class="minimap" id="minimap" src="@Model.MapData.MapLink" alt="minimap" />
        <canvas id="myCanvas"></canvas>
    </div>
</div>
<script type="text/javascript">
    const coordXs = [];
    const coordYs = [];
    @foreach(WEB_PA.Domain.Point point in @Model.PointsData)
    {
        @:coordXs.push("@point.CoordX.ToString().Replace(",", ".")");
        @:coordYs.push("@point.CoordY.ToString().Replace(",", ".")");
    }
    const miniMapEl = document.querySelector("#minimap");
    const canvasEl = document.querySelector("#myCanvas");
    miniMapEl.addEventListener("load", Draw);
    function Draw() {
        canvasEl.style.position = "absolute";
        canvasEl.style.left = miniMapEl.offsetLeft + "px";
        canvasEl.style.width = miniMapEl.clientWidth + "px";
        canvasEl.width = miniMapEl.clientWidth;
        canvasEl.style.top = miniMapEl.offsetTop + "px";
        canvasEl.style.height = miniMapEl.clientHeight + "px"; 
        canvasEl.height = miniMapEl.clientHeight;
        const ctx = canvasEl.getContext("2d");
        for (i = 0; i < coordXs.length; i++) {
            const coordX = Math.ceil(coordXs[i] / 100 * miniMapEl.clientWidth);
            const coordY = Math.ceil(coordYs[i] / 100 * miniMapEl.clientHeight);
            ctx.beginPath();
            ctx.arc(coordX, coordY, 10, 0, 2 * Math.PI);
            ctx.fillStyle = "#fffe00";
            ctx.fill();
        }
    }
</script>


    

